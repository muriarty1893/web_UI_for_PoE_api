"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ItemViewModule = void 0;
const itemSubModules_1 = require("./itemSubmodules/itemSubModules");
/**
 * Represents a module for viewing item-related information in a specific Path of Exile league.
 */
class ItemViewModule {
    /**
     * Represents a submodule for base type item information.
     */
    baseType;
    /**
     * Represents a submodule for beast item information.
     */
    beast;
    /**
     * Represents a submodule for delirium orbs item information.
     */
    deliriumOrbs;
    /**
     * Represents a submodule for divination card item information.
     */
    divinationCard;
    /**
     * Represents a submodule for essence item information.
     */
    essence;
    /**
     * Represents a submodule for fossil item information.
     */
    fossil;
    /**
     * Represents a submodule for helmet enchant item information.
     */
    helmetEnchant;
    /**
     * Represents a submodule for incubator item information.
     */
    incubator;
    /**
     * Represents a submodule for map item information.
     */
    map;
    /**
     * Represents a submodule for oil item information.
     */
    oil;
    /**
     * Represents a submodule for resonator item information.
     */
    resonator;
    /**
     * Represents a submodule for scarab item information.
     */
    scarab;
    /**
     * Represents a submodule for skill gem item information.
     */
    skillGem;
    /**
     * Represents a submodule for unique accessory item information.
     */
    uniqueAccessory;
    /**
     * Represents a submodule for unique armour item information.
     */
    uniqueArmour;
    /**
     * Represents a submodule for unique flask item information.
     */
    uniqueFlask;
    /**
     * Represents a submodule for unique jewel item information.
     */
    uniqueJewel;
    /**
     * Represents a submodule for unique map item information.
     */
    uniqueMap;
    /**
     * Represents a submodule for unique weapon item information.
     */
    uniqueWeapon;
    /**
     * Represents a submodule for vials item information.
     */
    vials;
    /**
     * Represents a submodule for omen item information.
     */
    omen;
    /**
     * Represents a submodule for memory item information.
     */
    memory;
    /**
     * Represents a submodule for invitation item information.
     */
    invitation;
    /**
     * Represents a submodule for unique relics item information.
     */
    uniqueRelics;
    /**
     * Represents a submodule for cluster jewel item information.
     */
    clusterJewel;
    /**
     * Represents a submodule for blighted map item information.
     */
    blightedMap;
    /**
     * Represents a submodule for blight ravaged map item information.
     */
    blightRavagedMap;
    /**
     * Represents a submodule for coffin item information.
     */
    coffin;
    /**
     * Creates an instance of AllflameEmberModule.
     */
    allflameEmber;
    /**
     * Creates a new instance of ItemViewModule.
     * @param league - The Path of Exile league for which the item information is retrieved.
     * @param typeName - The type of item information to retrieve.
     */
    constructor(league, typeName) {
        this.baseType = new itemSubModules_1.BaseTypeModule(league, typeName);
        this.beast = new itemSubModules_1.BeastModule(league, typeName);
        this.deliriumOrbs = new itemSubModules_1.DeliriumOrbsModule(league, typeName);
        this.divinationCard = new itemSubModules_1.DivinationCardModule(league, typeName);
        this.essence = new itemSubModules_1.EssenceModule(league, typeName);
        this.fossil = new itemSubModules_1.FossilModule(league, typeName);
        this.helmetEnchant = new itemSubModules_1.HelmetEnchantModule(league, typeName);
        this.incubator = new itemSubModules_1.IncubatorModule(league, typeName);
        this.map = new itemSubModules_1.MapModule(league, typeName);
        this.oil = new itemSubModules_1.OilModule(league, typeName);
        this.resonator = new itemSubModules_1.ResonatorModule(league, typeName);
        this.scarab = new itemSubModules_1.ScarabModule(league, typeName);
        this.skillGem = new itemSubModules_1.SkillGemModule(league, typeName);
        this.uniqueAccessory = new itemSubModules_1.UniqueAccessoryModule(league, typeName);
        this.uniqueArmour = new itemSubModules_1.UniqueArmourModule(league, typeName);
        this.uniqueFlask = new itemSubModules_1.UniqueFlaskModule(league, typeName);
        this.uniqueJewel = new itemSubModules_1.UniqueJewelModule(league, typeName);
        this.uniqueMap = new itemSubModules_1.UniqueMapModule(league, typeName);
        this.uniqueWeapon = new itemSubModules_1.UniqueWeaponModule(league, typeName);
        this.vials = new itemSubModules_1.VialsModule(league, typeName);
        this.omen = new itemSubModules_1.OmenModule(league, typeName);
        this.memory = new itemSubModules_1.MemoryModule(league, typeName);
        this.invitation = new itemSubModules_1.InvitationModule(league, typeName);
        this.uniqueRelics = new itemSubModules_1.UniqueRelicsModule(league, typeName);
        this.clusterJewel = new itemSubModules_1.ClusterJewelModule(league, typeName);
        this.blightedMap = new itemSubModules_1.BlightedMapModule(league, typeName);
        this.blightRavagedMap = new itemSubModules_1.BlightRavagedMapModule(league, typeName);
        this.coffin = new itemSubModules_1.CoffinModule(league, typeName);
        this.allflameEmber = new itemSubModules_1.AllflameEmberModule(league, typeName);
    }
}
exports.ItemViewModule = ItemViewModule;
